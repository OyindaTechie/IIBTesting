

CREATE COMPUTE MODULE getVerifycredential_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		BEGIN
		
		DECLARE querystring Character;
		DECLARE username, password, hashp, hashpassword Character;
		DECLARE i Integer 0;
		--DECLARE rowscount Integer CARDINALITY(Environment.Sampleresponse);
		
		SET username = InputRoot.HTTPInputHeader.Username;
		SET password  = InputRoot.HTTPInputHeader.Password;
		--SET hashpassword = 'select encode(digest('|| password || ',' || 'sha512' || '),' || 'hex' || ')';
		--SET hashpassword = 'select encode(digest( ''anything'', ''sha512''), ''hex'')';
		--SET hashp = passthru(hashpassword);
		
		SET querystring = 'select * from public."Users" a, public."Members" b where a."Username" = b."Email" and a."Username" = ? and a."Password" = ?'; 
		--SET querystring = 'select * from public."Users" where "Username" = ? and "Password" = ?';
		--SET Environment.Sampleresponse = passthru(querystring, username, password);
		
		SET Environment.Sampleresponse[] = passthru(querystring, username, password);
		
		DECLARE rowscount Integer CARDINALITY(Environment.Sampleresponse[]);
		
	IF i = rowscount THEN
		
		SET OutputRoot.JSON.Data.StatusCode = '01';
		SET OutputRoot.JSON.Data.StatusMsg = 'Incorrect username or password';
			
	ELSE
		SET OutputRoot.JSON.Data.responseData.Username = Environment.Sampleresponse[1].Username;
		SET OutputRoot.JSON.Data.responseData.Name = Environment.Sampleresponse[1].Representative;
		SET OutputRoot.JSON.Data.responseData.Role_id = Environment.Sampleresponse[1].Role_Id;
		SET OutputRoot.JSON.Data.StatusCode = '00';
		SET OutputRoot.JSON.Data.StatusMsg = 'Success';

		
	END IF;
		
	
		RETURN TRUE;
	END;
		RETURN TRUE;
	END;


END MODULE;
