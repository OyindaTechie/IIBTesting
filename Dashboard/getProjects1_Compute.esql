

CREATE COMPUTE MODULE getProjects1_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
	DECLARE username, querystring1, querystring2, issuesquery, projectstatus CHARACTER;
	DECLARE  skip, limit INTEGER;
		DECLARE i INTEGER 1;
		DECLARE j, projectstatusid INTEGER;
		SET username = InputRoot.HTTPInputHeader.Username;
		SET skip = InputLocalEnvironment.REST.Input.Parameters.skip;
		SET limit = InputLocalEnvironment.REST.Input.Parameters.limit;
		SET querystring1 = 'SELECT * FROM Public."Users" where "Username" = ?';
		SET Environment.sampleresponse[] = passthru(querystring1,username);
		
		IF Environment.sampleresponse[1].Role_Id = 1 or Environment.sampleresponse[1].Role_Id = 3 THEN
			SET querystring2 = 'SELECT * FROM Public."Projects" LIMIT ? OFFSET ?';
			SET Environment.sampleresponse1[] = passthru(querystring2, limit, skip);
			DECLARE rowscount INTEGER CARDINALITY(Environment.sampleresponse1[]); 
			
			WHILE i <= rowscount  DO
				
				SET j = Environment.sampleresponse1[i].Project_Id;
				SET issuesquery = 'select count(*) from public."Activities" where "Project_Id" = ?';
			    SET Environment.issuescount = PASSTHRU(issuesquery, j);
			    
			    SET projectstatusid = Environment.sampleresponse1[i].ProjStatus_Id;
			    SET projectstatus = 'select * from public."Status" where "Status_Id" = ? ';
			    SET Environment.status = PASSTHRU(projectstatus, projectstatusid);
			    
				
				CREATE FIELD OutputRoot.JSON.Data.responseData IDENTITY(JSON.Array) responseData;	
				SET OutputRoot.JSON.Data.responseData.Item[i].id = Environment.sampleresponse1[i].Project_Id;
				SET OutputRoot.JSON.Data.responseData.Item[i].ProjectName = Environment.sampleresponse1[i].Project_Name;
				SET OutputRoot.JSON.Data.responseData.Item[i].StartDate = Environment.sampleresponse1[i].Start_Date;
				SET OutputRoot.JSON.Data.responseData.Item[i].EndDate = Environment.sampleresponse1[i].End_Date;
				SET OutputRoot.JSON.Data.responseData.Item[i].Issues = Environment.issuescount.count;
				SET OutputRoot.JSON.Data.responseData.Item[i].Status = Environment.status.Status;
			    
			    
--CREATE LASTCHILD OF OutputRoot.JSON.Data.responseData.Item[i] Domain('JSON') NAME 'id' VALUE Environment.sampleresponse1[i].Project_Id;
--CREATE LASTCHILD OF OutputRoot.JSON.Data.responseData.Item[i] Domain('JSON') NAME 'ProjectName' VALUE Environment.sampleresponse1[i].Project_Name;
--CREATE LASTCHILD OF OutputRoot.JSON.Data.responseData.Item[i] Domain('JSON') NAME 'StartDate' VALUE Environment.sampleresponse1[i].Start_Date;
--CREATE LASTCHILD OF OutputRoot.JSON.Data.responseData.Item[i] Domain('JSON') NAME 'EndDate' VALUE Environment.sampleresponse1[i].End_Date;

				SET i = i + 1;
				
			END WHILE;
			
				SET OutputRoot.JSON.Data.recordCount = rowscount;
				SET OutputRoot.JSON.Data.StatusCode = '99';
				SET OutputRoot.JSON.Data.StatusMessage = 'Successful';
			
		ELSE 
			SET OutputRoot.JSON.Data.StatusCode = '01';
			SET OutputRoot.JSON.Data.StatusMessage = 'Unsuccessful';
		END IF;
		RETURN TRUE;
	END;

	

END MODULE;
